TAX<-read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/taxonomy.t.csv",header = T,sep = ",")
meta_table<- read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/MetadataYorkEDITTXT.csv",header = T,sep = ",")
names(TAX) <- sub("Feature_ID", "OTU", names(TAX))
OTU<-read.table("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/table.tsv",header = T)
TAX<-read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/taxonomy.t.csv",header = T,sep = ",")
meta_table<- read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/MetadataYorkEDITTXT.csv",header = T,sep = ",")
names(TAX) <- sub("Feature_ID", "OTU", names(TAX))
table(OTU$OTU%in%TAX$OTU)
TAX<- TAX[TAX$OTU%in%OTU$OTU==T,]
table(OTU$OTU%in%TAX$OTU)
TAX<- TAX[TAX$OTU%in%OTU$OTU==T,]
TAX<- TAX[TAX$OTU%in%OTU$OTU==T,]
OTU<-read.table("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/table.tsv",header = T)
TAX<-read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/taxonomy.t.csv",header = T,sep = ",")
meta_table<- read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/MetadataYorkEDITTXT.csv",header = T,sep = ",")
names(TAX) <- sub("Feature_ID", "OTU", names(TAX))
table(OTU$OTU%in%TAX$OTU)
TAX<- TAX[TAX$OTU%in%OTU$OTU==T,]
table(OTU$OTU%in%TAX$OTU)
OTU<-read.table("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/table.tsv",header = T)
TAX<-read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/taxonomy.t.csv",header = T,sep = ",")
meta_table<- read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/MetadataYorkEDITTXT.csv",header = T,sep = ",")
names(TAX) <- sub("Feature_ID", "OTU", names(TAX))
table(OTU$OTU%in%TAX$OTU)
head(TAX)
head(OTU)
TAX$OTU<- as.character(TAX$OTU)
OTU$OTU<- as.character(OTU$OTU)
table(OTU$OTU%in%TAX$OTU)
TAX<- TAX[!OTU$OTU%in%TAX$OTU==F,]
table(OTU$OTU%in%TAX$OTU)
TAX<- TAX[!TAX$OTU%in%OTU$OTU==F,]
table(OTU$OTU%in%TAX$OTU)
OTU<-read.table("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/table.tsv",header = T)
TAX<-read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/taxonomy.t.csv",header = T,sep = ",")
meta_table<- read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/MetadataYorkEDITTXT.csv",header = T,sep = ",")
names(TAX) <- sub("Feature_ID", "OTU", names(TAX))
table(OTU$OTU%in%TAX$OTU)
TAX$OTU<- as.character(TAX$OTU)
OTU$OTU<- as.character(OTU$OTU)
table(OTU$OTU%in%TAX$OTU)
TAX<- TAX[!TAX$OTU%in%OTU$OTU==F,]
OTU<-read.table("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/table.tsv",header = T)
TAX<-read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/taxonomy.t.csv",header = T,sep = ",")
meta_table<- read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/MetadataYorkEDITTXT.csv",header = T,sep = ",")
names(TAX) <- sub("Feature_ID", "OTU", names(TAX))
table(OTU$OTU%in%TAX$OTU)
TAX$OTU<- as.character(TAX$OTU)
OTU$OTU<- as.character(OTU$OTU)
table(OTU$OTU%in%TAX$OTU)
OUT<- OTU[!OTU$OTU%in%TAX$OTU==F,]
TAX<- TAX[!TAX$OTU%in%OTU$OTU==F,]
# test = as.matrix(OTU[,-1])
# rownames(test) = OTU[,1]
# OTU = otu_table(test, taxa_are_rows = FALSE)
TAX1<-TAX
test<- as.matrix(OTU)[,-1]
rownames(test)<- OTU[,1]
test1<-vector()
for(ii in colnames(test)) test1 <- cbind(test1,as.numeric(test[,ii]))
colnames(test1) = colnames(test)
rownames(test1) = rownames(test)
OTU = otu_table(test1, taxa_are_rows = FALSE)
TAX$Kingdom<-sapply(strsplit(as.character(TAX$Taxon), "\\__"), function(oo) oo[2])
TAX$Kingdom<-sapply(strsplit(as.character(TAX$Kingdom), "\\."), function(oo) oo[1])
TAX$Kingdom<-sapply(strsplit(as.character(TAX$Kingdom), ";"), function(oo) oo[1])
TAX$Phylum<-sapply(strsplit(as.character(TAX$Taxon), "\\__"), function(oo) oo[3])
TAX$Phylum<-sapply(strsplit(as.character(TAX$Phylum), ";"), function(oo) oo[1])
TAX$Class<-sapply(strsplit(as.character(TAX$Taxon), "\\__"), function(oo) oo[4])
TAX$Class<-sapply(strsplit(as.character(TAX$Class), ";"), function(oo) oo[1])
TAX$Order<-sapply(strsplit(as.character(TAX$Taxon), "\\__"), function(oo) oo[5])
TAX$Order<-sapply(strsplit(as.character(TAX$Order), ";"), function(oo) oo[1])
TAX$Family<-sapply(strsplit(as.character(TAX$Taxon), "\\__"), function(oo) oo[6])
TAX$Family<-sapply(strsplit(as.character(TAX$Family), ";"), function(oo) oo[1])
TAX$Genus<-sapply(strsplit(as.character(TAX$Taxon), "\\__"), function(oo) oo[7])
TAX$Genus<-sapply(strsplit(as.character(TAX$Genus), ";"), function(oo) oo[1])
TAX<-TAX[,c(1,4:9),]
TX = as.matrix(TAX[,-1])
rownames(TX) = TAX[,1]
TAX = tax_table(as.matrix(TX))
SAM = sample_data(meta_table)
sample_names(SAM)<- SAM$sample.id
TREE<- read_tree("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/York_rootedpigtree.nwk", errorIfNULL=FALSE)
OTU_tree <- compute.brlen(TREE, method = "Grafen")
physeq <- merge_phyloseq(phyloseq(OTU, TAX), SAM, OTU_tree)
OTU_tree
OTU<-read.table("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/table.tsv",header = T)
TAX<-read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/taxonomy.t.csv",header = T,sep = ",")
meta_table<- read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/MetadataYorkEDITTXT.csv",header = T,sep = ",")
names(TAX) <- sub("Feature_ID", "OTU", names(TAX))
table(OTU$OTU%in%TAX$OTU)
TAX$OTU<- as.character(TAX$OTU)
OTU$OTU<- as.character(OTU$OTU)
table(OTU$OTU%in%TAX$OTU)
TAX<- TAX[!TAX$OTU%in%OTU$OTU==F,]
TAX<- droplevels(TAX)
table(OTU$OTU%in%TAX$OTU)
head(TAZ)
head(TAX)
head(OTU)
head(meta_table)
OTU<-read.table("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/table.tsv",header = T)
TAX<-read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/taxonomy.t.csv",header = T,sep = ",")
meta_table<- read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/MetadataYorkEDITTXT.csv",header = T,sep = ",")
names(TAX) <- sub("Feature_ID", "OTU", names(TAX))
table(OTU$OTU%in%TAX$OTU)
TAX$OTU<- as.character(TAX$OTU)
OTU$OTU<- as.character(OTU$OTU)
table(OTU$OTU%in%TAX$OTU)
TAX<- TAX[TAX$OTU==OTU$OTU,]
TAX$X1<- OTU[match(TAX$OTU,OTU$OTU),]$X1
dim(TAX[is.na(TAX$X1),])
TAX$X1
TAX$X1<-OTU[match(TAX$OTU,OTU$OTU),]$X1
dim(TAX[is.na(TAX$X1),])
OTU<-read.table("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/table.tsv",header = T)
TAX<-read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/taxonomy.t.csv",header = T,sep = ",")
meta_table<- read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/MetadataYorkEDITTXT.csv",header = T,sep = ",")
names(TAX) <- sub("Feature_ID", "OTU", names(TAX))
table(OTU$OTU%in%TAX$OTU)
TAX$OTU<- as.character(TAX$OTU)
OTU$OTU<- as.character(OTU$OTU)
table(OTU$OTU%in%TAX$OTU)
TAX$X1<-OTU[match(TAX$OTU,OTU$OTU),]$X1
dim(TAX[is.na(TAX$X1),])
dim(TAX[!is.na(TAX$X1),])
TAX<-TAX[!is.na(TAX$X1),]
TAX<- droplevels(TAX)
table(OTU$OTU%in%TAX$OTU)
OTU<-read.table("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/table.tsv",header = T)
TAX<-read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/taxonomy.t.csv",header = T,sep = ",")
meta_table<- read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/MetadataYorkEDITTXT.csv",header = T,sep = ",")
names(TAX) <- sub("Feature_ID", "OTU", names(TAX))
table(OTU$OTU%in%TAX$OTU)
TAX$OTU<- as.character(TAX$OTU)
OTU$OTU<- as.character(OTU$OTU)
table(OTU$OTU%in%TAX$OTU)
OTU<-OUT[OTU$OTU%in%TAX$OTU==T,]
table(OTU$OTU%in%TAX$OTU)
TAX$OTU<- as.character(TAX$OTU)
OTU$OTU<- as.character(OTU$OTU)
table(OTU$OTU%in%TAX$OTU)
OTU<-OUT[OTU$OTU%in%TAX$OTU==T,]
OTU<-read.table("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/table.tsv",header = T)
TAX<-read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/taxonomy.t.csv",header = T,sep = ",")
meta_table<- read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/MetadataYorkEDITTXT.csv",header = T,sep = ",")
names(TAX) <- sub("Feature_ID", "OTU", names(TAX))
table(OTU$OTU%in%TAX$OTU)
TAX$OTU<- as.character(TAX$OTU)
OTU$OTU<- as.character(OTU$OTU)
table(OTU$OTU%in%TAX$OTU)
OTU<-OUT[OTU$OTU%in%TAX$OTU==T,]
TAX$X1<-OTU[match(TAX$OTU,OTU$OTU),]$X1
TAX<-TAX[!is.na(TAX$X1),]
OTU<-read.table("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/table.tsv",header = T)
TAX<-read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/taxonomy.t.csv",header = T,sep = ",")
meta_table<- read.csv("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/MetadataYorkEDITTXT.csv",header = T,sep = ",")
names(TAX) <- sub("Feature_ID", "OTU", names(TAX))
table(OTU$OTU%in%TAX$OTU)
TAX$OTU<- as.character(TAX$OTU)
OTU$OTU<- as.character(OTU$OTU)
table(OTU$OTU%in%TAX$OTU)
OTU<-OUT[OTU$OTU%in%TAX$OTU==T,]
test<- as.matrix(OTU)[,-1]
rownames(test)<- OTU[,1]
test1<-vector()
for(ii in colnames(test)) test1 <- cbind(test1,as.numeric(test[,ii]))
colnames(test1) = colnames(test)
rownames(test1) = rownames(test)
OTU = otu_table(test1, taxa_are_rows = FALSE)
TAX$Kingdom<-sapply(strsplit(as.character(TAX$Taxon), "\\__"), function(oo) oo[2])
TAX$Kingdom<-sapply(strsplit(as.character(TAX$Kingdom), "\\."), function(oo) oo[1])
TAX$Kingdom<-sapply(strsplit(as.character(TAX$Kingdom), ";"), function(oo) oo[1])
TAX$Phylum<-sapply(strsplit(as.character(TAX$Taxon), "\\__"), function(oo) oo[3])
TAX$Phylum<-sapply(strsplit(as.character(TAX$Phylum), ";"), function(oo) oo[1])
TAX$Class<-sapply(strsplit(as.character(TAX$Taxon), "\\__"), function(oo) oo[4])
TAX$Class<-sapply(strsplit(as.character(TAX$Class), ";"), function(oo) oo[1])
TAX$Order<-sapply(strsplit(as.character(TAX$Taxon), "\\__"), function(oo) oo[5])
TAX$Order<-sapply(strsplit(as.character(TAX$Order), ";"), function(oo) oo[1])
TAX$Family<-sapply(strsplit(as.character(TAX$Taxon), "\\__"), function(oo) oo[6])
TAX$Family<-sapply(strsplit(as.character(TAX$Family), ";"), function(oo) oo[1])
TAX$Genus<-sapply(strsplit(as.character(TAX$Taxon), "\\__"), function(oo) oo[7])
TAX$Genus<-sapply(strsplit(as.character(TAX$Genus), ";"), function(oo) oo[1])
TAX<-TAX[,c(1,4:9),]
TX = as.matrix(TAX[,-1])
rownames(TX) = TAX[,1]
TAX = tax_table(as.matrix(TX))
SAM = sample_data(meta_table)
sample_names(SAM)<- SAM$sample.id
TREE<- read_tree("../amuwonge/Dropbox/BBSRC_FLF/UK_Pig_samples_Metagenomics/Oligotyping/ANALYSIS/QIIME_ANALYSIS_PIGS_ONYLY/York_rootedpigtree.nwk", errorIfNULL=FALSE)
OTU_tree <- compute.brlen(TREE, method = "Grafen")
physeq <- merge_phyloseq(phyloseq(OTU, TAX), SAM, OTU_tree)
taxa_names()
taxa_names(TAX)
physeq <- merge_phyloseq(phyloseq(OTU, TAX), SAM, OTU_tree)
physeq <- merge_phyloseq(phyloseq(OTU, SAM, OTU_tree))
physeq <- merge_phyloseq(OTU, SAM, OTU_tree)
tati<--as.data.frame(correlation.table_BASE)
### LOAD library igraph
library(microbiome)
tati<--as.data.frame(correlation.table_BASE)
library('GUniFrac')
library('vegan')
library('ggplot2')
library('corrplot')
library('phyloseq')
library('devtools')
library('metagenomeSeq')
library('ape')
library('dplyr')
library('DESeq2')
library("pgirmess")
library("BiodiversityR")
library(microbiomeSeq)
library(RVAideMemoire)
library(colorspace)
library(ColorPalette)
library(pgirmess)
set.seed(8765)
OTU_LUNG<-read.csv("QIIME_OUTPUT/LUNG_RERUN/Phyloseq_analysis/Lung_feature_biome.csv",header = T,sep = ",")
OTU_LUNG_dum<-read.csv("QIIME_OUTPUT/LUNG_RERUN/Phyloseq_analysis/Lung_feature_biomeDUM.csv",header = T,sep = ",")# added 1 to avoid non zero for Deseq2run
## This does not allow zeros in its estimatations
TAX_LUNG<-read.csv("QIIME_OUTPUT/LUNG_RERUN/Phyloseq_analysis/taxonomy.csv",header = T,sep = ",")
META_LUNG_TABLE<-read.csv("QIIME_OUTPUT/LUNG_RERUN/Phyloseq_analysis/FINAL_METADB_TB2.csv",header = T,sep = ",")
META_LUNG_ORIGN<-read.csv("QIIME_OUTPUT/LUNG_RERUN/Phyloseq_analysis/FINAL_METADB_TB2.csv",header = T,sep = ",")
TREE<- read_tree("QIIME_OUTPUT/LUNG_RERUN/Phyloseq_analysis/tree.nwk", errorIfNULL=FALSE)
OTU_tree <- compute.brlen(TREE, method = "Grafen")
#TAX_LUNG<-TAX_LUNG[!is.na(TAX_LUNG$Genus),]
table(TAX_LUNG$OUT_ID%in%OTU_LUNG$OUT_ID)
TAXNO_EDIT<-TAX_LUNG
## LETS BRING_BACK THE UNCORDED VARIABLES(see cord named Database cleaning in this project)
META_LUNG_TABLE$Hypertension<- FULL_EDITED_DB[match(META_LUNG_TABLE$Sample_ID,FULL_EDITED_DB$Sample_ID),]$Hypertension
META_LUNG_TABLE$Age<- FULL_EDITED_DB[match(META_LUNG_TABLE$Sample_ID,FULL_EDITED_DB$Sample_ID),]$Age
META_LUNG_TABLE$Fever<- FULL_EDITED_DB[match(META_LUNG_TABLE$Sample_ID,FULL_EDITED_DB$Sample_ID),]$Fever
META_LUNG_TABLE$Anemia<- FULL_EDITED_DB[match(META_LUNG_TABLE$Sample_ID,FULL_EDITED_DB$Sample_ID),]$Anemia
META_LUNG_TABLE$Hemoptysis<- FULL_EDITED_DB[match(META_LUNG_TABLE$Sample_ID,FULL_EDITED_DB$Sample_ID),]$Hemoptysis
META_LUNG_TABLE$Drink_alcohol<- FULL_EDITED_DB[match(META_LUNG_TABLE$Sample_ID,FULL_EDITED_DB$Sample_ID),]$Drink_alcohol
META_LUNG_TABLE$Smoking<- FULL_EDITED_DB[match(META_LUNG_TABLE$Sample_ID,FULL_EDITED_DB$Sample_ID),]$Smoking
META_LUNG_TABLE$Take.ARV<- FULL_EDITED_DB[match(META_LUNG_TABLE$Sample_ID,FULL_EDITED_DB$Sample_ID),]$Take.ARV
META_LUNG_TABLE$Other.Medication<- FULL_EDITED_DB[match(META_LUNG_TABLE$Sample_ID,FULL_EDITED_DB$Sample_ID),]$Other.Medication
META_LUNG_TABLE$Empiric_antibiotic<- FULL_EDITED_DB[match(META_LUNG_TABLE$Sample_ID,FULL_EDITED_DB$Sample_ID),]$Empiric_antibiotic
META_LUNG_TABLE$CFU_LJ<- FULL_EDITED_DB[match(META_LUNG_TABLE$Sample_ID,FULL_EDITED_DB$Sample_ID),]$CFU_LJ
META_LUNG_TABLE$Leanage3<- FULL_EDITED_DB[match(META_LUNG_TABLE$Sample_ID,FULL_EDITED_DB$Sample_ID),]$Leanage3
META_LUNG_TABLE$Leanage_4<- FULL_EDITED_DB[match(META_LUNG_TABLE$Sample_ID,FULL_EDITED_DB$Sample_ID),]$Leanage_4
META_LUNG_TABLE$Single.multiple_leanages<- FULL_EDITED_DB[match(META_LUNG_TABLE$Sample_ID,FULL_EDITED_DB$Sample_ID),]$Single.multiple_leanages
META_LUNG_TABLE$Sampling.point<-as.character(META_LUNG_TABLE$Sampling.point)
META_LUNG_TABLE$Sampling.point[META_LUNG_TABLE$Sampling.point=="0"]<-"B-line"
META_LUNG_TABLE$Sampling.point[META_LUNG_TABLE$Sampling.point=="2"]<-"First-FLUP"
META_LUNG_TABLE$Sampling.point[META_LUNG_TABLE$Sampling.point=="5"]<-"Second-FLUP"
META_LUNG_TABLE$Sampling.point<- factor(META_LUNG_TABLE$Sampling.point,levels = c("B-line","First-FLUP","Second-FLUP"))
META_LUNG_TABLE$BMI_CAT<- factor(META_LUNG_TABLE$BMI_CAT,levels = c("LOW","MIDIUM","HIGH"))
META_LUNG_TABLE$HIV_Status<- factor(META_LUNG_TABLE$HIV_Status,levels = c("Positive","Negative"))
TAX_LUNG$Kingdom<-sapply(strsplit(as.character(TAX_LUNG$Taxon), "\\__"), function(oo) oo[2])
TAX_LUNG$Kingdom<-sapply(strsplit(as.character(TAX_LUNG$Kingdom), "\\;"), function(oo) oo[1])
TAX_LUNG$Phylum<-sapply(strsplit(as.character(TAX_LUNG$Taxon), "\\__"), function(oo) oo[3])
TAX_LUNG$Phylum<-sapply(strsplit(as.character(TAX_LUNG$Phylum), ";"), function(oo) oo[1])
TAX_LUNG$Class<-sapply(strsplit(as.character(TAX_LUNG$Taxon), "\\__"), function(oo) oo[4])
TAX_LUNG$Class<-sapply(strsplit(as.character(TAX_LUNG$Class), ";"), function(oo) oo[1])
TAX_LUNG$Order<-sapply(strsplit(as.character(TAX_LUNG$Taxon), "\\__"), function(oo) oo[5])
TAX_LUNG$Order<-sapply(strsplit(as.character(TAX_LUNG$Order), ";"), function(oo) oo[1])
TAX_LUNG$Family<-sapply(strsplit(as.character(TAX_LUNG$Taxon), "\\__"), function(oo) oo[6])
TAX_LUNG$Family<-sapply(strsplit(as.character(TAX_LUNG$Family), ";"), function(oo) oo[1])
TAX_LUNG$Genus<-sapply(strsplit(as.character(TAX_LUNG$Taxon), "\\__"), function(oo) oo[7])
TAX_LUNG$Genus<-sapply(strsplit(as.character(TAX_LUNG$Genus), ";"), function(oo) oo[1])
TAX_LUNG$Species<-sapply(strsplit(as.character(TAX_LUNG$Taxon), "\\__"), function(oo) oo[8])
TAX_LUNG$Genus<-sapply(strsplit(as.character(TAX_LUNG$Genus), ";"), function(oo) oo[1])
TAX_LUNG<-TAX_LUNG[,c(1,4:9),]
TAX_LUNG<-TAX_LUNG[!is.na(TAX_LUNG$Genus),]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="uncultured",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="unidentified",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="uncultured PS1 clade bacterium",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="uncultured marine bacterium",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="uncultured Cytophagales bacterium",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="uncultured bacterium",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="RS62 marine group",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="bacterium episymbiont of Kiwa sp.",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="uncultured organism",]
TAX_LUNG$Genus[TAX_LUNG$Genus=="uncultured Bacteroidetes bacterium"]<-"Bacteroidetes bacterium"
TAX_LUNG$Genus[TAX_LUNG$Genus=="uncultured Bacteroidetes/Chlorobi group bacterium"]<-"Bacteroidetes bacterium"
TAX_LUNG$Genus[TAX_LUNG$Genus=="uncultured Chlorobi bacterium"]<-"Bacteroidetes bacterium"
TAX_LUNG$Genus[TAX_LUNG$Genus=="uncultured Flavobacteriales bacterium"]<-"Flavobacteriales bacterium"
TAX_LUNG$Genus[TAX_LUNG$Genus=="uncultured alpha proteobacterium"]<-"Alpha proteobacterium"
TAX_LUNG$Genus[TAX_LUNG$Genus=="uncultured Bacteroidales bacterium"]<-"Bacteroidales bacterium"
TAX_LUNG$Genus[TAX_LUNG$Genus=="uncultured Sphingomonas sp."]<-"Sphingomonas sp"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Selenomonas 4"]<-"Selenomonas"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Selenomonas 4"]<-"Selenomonas"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Selenomonas 3"]<-"Selenomonas"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Rikenellaceae RC9 gut group"]<-"Rikenellaceae RC9"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Porphyromonadaceae bacterium C941" ]<-"Porphyromonadaceae bacterium"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Musa acuminata subsp. malaccensis"]<-"Musa acuminata"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Lachnospiraceae ND3007 group"]<-"Lachnospiraceae ND3007"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Lachnospiraceae NK4A136 group"]<-"Lachnospiraceae NK4A136"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Clostridiales bacterium canine oral taxon 162"]<-"Clostridiales bacterium"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Clostridium sensu stricto 1"]<-"Clostridium"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Christensenellaceae R-7 group"]<-"Christensenellaceae R-7"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Burkholderia-Caballeronia-Paraburkholderia"]<-"Burkholderia-Caballeronia"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Allorhizobium-Neorhizobium-Pararhizobium-Rhizobium"]<-"Allorhizobium.Neorhizobium"
TAX_LUNG$Genus[TAX_LUNG$Genus=="[Eubacterium] brachy group"]<-"Eubacterium brachy"
TAX_LUNG$Genus[TAX_LUNG$Genus=="[Eubacterium] nodatum group"]<-"Eubacterium nodatum"
TAX_LUNG$Genus[TAX_LUNG$Genus=="[Eubacterium] yurii group"]<-"Eubacterium yurii"
TAX_LUNG$Genus[TAX_LUNG$Genus=="[Eubacterium] coprostanoligenes group"]<-"Eubacterium coprostanoligenes"
TAX_LUNG$Genus[TAX_LUNG$Genus=="[Eubacterium] saphenum group"]<-"Eubacterium saphenum"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Alphaproteobacteria bacterium canine oral taxon 081"]<-"Alphaproteobacteria bacterium"
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="WCHB1-32",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="CAG-352" ,]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="IS-44",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="MB11C04 marine group",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="SAR92 clade",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="CL500-3",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="Schizothrix LEGE 07164",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="MSBL3" ,]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="RB41" ,]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="uncultured soil bacterium",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="PMMR1",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="W5053",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="NS2b marine group",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="R76-B128",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="NS4 marine group",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="uncultured Candidatus Saccharibacteria bacterium",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="Family XIII UCG-001",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="NS5 marine group",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="NS3a marine group",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="Pir4 lineage" ,]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="Clade Ia",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="WCHB1-32",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="NS10 marine group",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="CAG-352" ,]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="IS-44",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="F0058",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="F0332",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="Bacteroidia bacterium canine oral taxon 187",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="Mastigocladopsis PCC-10914",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="SM1A02",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="OM43 clade",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="uncultured Verrucomicrobia bacterium",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="Mastigocladopsis PCC-10914",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="Labrys",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="Verruc-01",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="OM60(NOR5) clade",]
TAX_LUNG<-TAX_LUNG[!TAX_LUNG$Genus=="Allorhizobium.Neorhizobium",]
TAX_LUNG$Genus[TAX_LUNG$Genus=="Lachnospiraceae NK4A136" ]<- "Lachnospira"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Dehalococcoidia bacterium CG2_30_46_19"]<- "Dehalococcus"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Prevotellaceae NK3B31 group"]<- "Prevotella"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Ruminococcus 1"]<- "Ruminococcus"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Erysipelotrichaceae UCG-003"]<- "Erysipelotrichia"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Ruminococcus 2" ]<- "Ruminococcus"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Wilmottia Ant-Ph58"]<- "Lachnospira"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Ruminococcaceae UCG-010"]<- "Ruminococcus"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Erysipelotrichaceae UCG-006"]<- "Erysipelotrichia"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Lachnospiraceae NK4A136" ]<- "Lachnospira"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Pleurocapsa PCC-7319" ]<- "Pleurocapsa"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Prevotellaceae UCG-004"]<- "Prevotella"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Coprococcus 2"]<- "Coprococcus"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Prevotellaceae UCG-004"]<- "Prevotella"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Butyrivibrio 2"]<- "Butyrivibrio"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Christensenellaceae R-7" ]<-"Christensenella"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Porphyromonadaceae bacterium" ]<-"Porphyromonas"
TAX_LUNG$Genus[TAX_LUNG$Genus== "Sphingomonas sp"]<- "Sphingomonas"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Synechococcus CC9902"]<-"Synechococcus"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Spirochaeta 2" ]<-"Spirochaeta"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Atelocyanobacterium (UCYN-A)"]<-"Atelocyanobacterium"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Prevotella 9"]<-"Ruminococcus"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Prevotella 9"]<-"Prevotella"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Flavobacteriales bacterium"]<-"Flavobacteria"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Escherichia-Shigella"]<-"Escherichia"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Bacteroidales bacterium"]<-"Bacteroidia"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Lachnospiraceae ND3007" ]<-"Lachnospira"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Corynebacterium 1"]<-"Corynebacterium"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Erysipelotrichaceae UCG-007"]<-"Erysipelotrichia"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Defluviitaleaceae UCG-011"]<-"Defluviitaleaceae"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Rivularia PCC-7116"]<-"Rivularia"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Burkholderia-Caballeronia"]<-"Ruminococcus"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Rikenellaceae RC9"]<-"Rikenella"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Ruminococcaceae UCG-005"]<-"Ruminococcus"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Prevotella 2"]<-"Prevotella"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Burkholderia-Caballeronia"]<-"Burkholderia"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Prevotella 6"]<-"Prevotella"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Prevotella 7"]<-"Prevotella"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Ruminococcaceae UCG-014"]<-"Ruminococcus"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Treponema 2"]<-"Treponema"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Ruminococcaceae UCG-002"]<-"Ruminococcus"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Prevotella 1"]<-"Prevotella"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Alpha proteobacterium"]<-"Proteobacterium"
TAX_LUNG$Genus[TAX_LUNG$Genus=="Alphaproteobacteria bacterium"]<-"Proteobacterium"
OTU_LUNG<- OTU_LUNG[OTU_LUNG$OUT_ID%in%TAX_LUNG$OUT_ID==T,]
META_LUNG_TABLE$HIV_Status[META_LUNG_TABLE$HIV_Status==1]<-"Positive"
META_LUNG_TABLE$HIV_Status[META_LUNG_TABLE$HIV_Status==0]<-"Negative"
# META_LUNG_TABLE$Sampling.point<- as.character(META_LUNG_TABLE$Sampling.point)
# META_LUNG_TABLE$Sampling.point[META_LUNG_TABLE$Sampling.point==0]<-"B-line"
# META_LUNG_TABLE$Sampling.point[META_LUNG_TABLE$Sampling.point==2]<-"First-FLP"
# META_LUNG_TABLE$Sampling.point[META_LUNG_TABLE$Sampling.point==5]<-"Second-FLP"
# META_LUNG_TABLE$Sampling.point[META_LUNG_TABLE$Sampling.point=="U"]<-"UNKWN-FLP"
META_LUNG_TABLE$Smear.Conversion<- as.character(META_LUNG_TABLE$Smear.Conversion)
META_LUNG_TABLE$Smear.Conversion[META_LUNG_TABLE$Smear.Conversion==0]<-"NON_CONVERT"
META_LUNG_TABLE$Smear.Conversion[META_LUNG_TABLE$Smear.Conversion==1]<-"CONVERT"
META_LUNG_TABLE$Sex<- as.character(META_LUNG_TABLE$Sex)
META_LUNG_TABLE$Sex[META_LUNG_TABLE$Sex=="F "]<-"F"
META_LUNG_TABLE<-droplevels(META_LUNG_TABLE)
META_LUNG_TABLE$MTB.Present<- as.character(META_LUNG_TABLE$MTB.Present)
META_LUNG_TABLE$MTB.Present[META_LUNG_TABLE$MTB.Present==0]<-"NO"
META_LUNG_TABLE$MTB.Present[META_LUNG_TABLE$MTB.Present==1]<-"YES"
META_LUNG_TABLE$Fever<- as.character(META_LUNG_TABLE$Fever)
META_LUNG_TABLE$Fever[META_LUNG_TABLE$Fever==0]<-"NO"
META_LUNG_TABLE$Fever[META_LUNG_TABLE$Fever==1]<-"YES"
META_LUNG_TABLE$Anemia<- as.character(META_LUNG_TABLE$Anemia)
META_LUNG_TABLE$Anemia[META_LUNG_TABLE$Anemia==0]<-"NO"
META_LUNG_TABLE$Anemia[META_LUNG_TABLE$Anemia==1]<-"YES"
META_LUNG_TABLE$Hemoptysis<- as.character(META_LUNG_TABLE$Hemoptysis)
META_LUNG_TABLE$Hemoptysis[META_LUNG_TABLE$Hemoptysis==0]<-"NO"
META_LUNG_TABLE$Hemoptysis[META_LUNG_TABLE$Hemoptysis==1]<-"YES"
META_LUNG_TABLE$Drink_alcohol<- as.character(META_LUNG_TABLE$Drink_alcohol)
META_LUNG_TABLE$Drink_alcohol[META_LUNG_TABLE$Drink_alcohol==0]<-"NO"
META_LUNG_TABLE$Drink_alcohol[META_LUNG_TABLE$Drink_alcohol==1]<-"YES"
META_LUNG_TABLE$Smoking<- as.character(META_LUNG_TABLE$Smoking)
META_LUNG_TABLE$Smoking[META_LUNG_TABLE$Smoking==0]<-"NO"
META_LUNG_TABLE$Smoking[META_LUNG_TABLE$Smoking==1]<-"YES"
META_LUNG_TABLE$Leanage3<- as.character(META_LUNG_TABLE$Leanage3)
META_LUNG_TABLE$Leanage3[META_LUNG_TABLE$Leanage3==0]<-"NO"
META_LUNG_TABLE$Leanage3[META_LUNG_TABLE$Leanage3==1]<-"YES"
META_LUNG_TABLE$Leanage_4<- as.character(META_LUNG_TABLE$Leanage_4)
META_LUNG_TABLE$Leanage_4[META_LUNG_TABLE$Leanage_4==0]<-"NO"
META_LUNG_TABLE$Leanage_4[META_LUNG_TABLE$Leanage_4==1]<-"YES"
META_LUNG_TABLE$BMI_CAT[META_LUNG_TABLE$BMI<17.175]<-"LOW"
META_LUNG_TABLE$BMI_CAT[META_LUNG_TABLE$BMI>23]<-"HIGH"
META_LUNG_TABLE$BMI_CAT[is.na(META_LUNG_TABLE$BMI_CAT)]<-"MIDIUM"
META_LUNG_TABLE$DIS_HOSPT<- METADATA_TB[match(META_LUNG_TABLE$Sample_ID,METADATA_TB$SampleID),]$DIS_HOSPT
write.delim(TAX_LUNG, file = "TAX.txt", row.names = FALSE, quote = FALSE, sep = "\t")
write.delim(OTU_LUNG_dum, file = "OTU2.txt", row.names = FALSE, quote = FALSE, sep = "\t")
write.delim(OTU_LUNG, file = "OTU.txt", row.names = FALSE, quote = FALSE, sep = "\t")
write.delim(META_LUNG_TABLE, file = "MetaDB.txt", row.names = FALSE, quote = FALSE, sep = "\t")
#### Read in Files
counts<-read.delim("OTU.txt", row.names = 1)
countsdesq<-read.delim("OTU2.txt", row.names = 1)
taxa<-read.delim("TAX.txt", row.names = 1, header = T)
#colnames(taxa)<- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus")
meta<-read.delim("MetaDB.txt", header = T, row.names = 1)
### Convert objects for phyloseq object
data<-otu_table(counts,taxa_are_rows = T)
dataDesq<-otu_table(countsdesq,taxa_are_rows = T)
taxa<-as.matrix(taxa)
taxa<-tax_table(taxa)
meta<-sample_data(meta)
### create Phyloseq experiment object
EXPname<-phyloseq(data,taxa,meta,OTU_tree)
EXPnameDesq<-phyloseq(dataDesq,taxa,meta,OTU_tree)
library('GUniFrac')
library('vegan')
library('ggplot2')
library('corrplot')
library('phyloseq')
library('devtools')
library('metagenomeSeq')
library('ape')
library('dplyr')
library('DESeq2')
library("pgirmess")
library("BiodiversityR")
library(microbiomeSeq)
library(RVAideMemoire)
library(colorspace)
library(ColorPalette)
library(pgirmess)
OTU_LUNG<-read.csv("QIIME_OUTPUT/LUNG_RERUN/Phyloseq_analysis/Lung_feature_biome.csv",header = T,sep = ",")
OTU_LUNG<-read.csv("QIIME_OUTPUT/LUNG_RERUN/Phyloseq_analysis/Lung_feature_biome.csv",header = T,sep = ",")
summary(qp.chao.all)
library(ggplot2)
library(forcats)
BRAYCURT
summary(pwcap)
summary(Braydonout)
library(dplyr)
library(magrittr)
library(plyr)
# Same with the viridis color palette
# color-blind friendly and uniform
# options: viridis, magma, plasma, inferno
# https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html
# Also discrete=TRUE versions available
library(viridis)
library(RColorBrewer)
library(knitr)
# pseq.1 <- subset_samples(EXPname, Sampling.point == "B-line" )
# pseq.2 <- prune_taxa(taxa_sums(pseq.1) > 0, pseq.1)
library(microbiome)
library('GUniFrac')
library('vegan')
library('ggplot2')
library('corrplot')
library('phyloseq')
library('devtools')
library('metagenomeSeq')
library('ape')
library('dplyr')
library('DESeq2')
library("pgirmess")
library("BiodiversityR")
library(microbiomeSeq)
library(RVAideMemoire)
library(colorspace)
library(ColorPalette)
library(pgirmess)
BRAYCURT
Braydonout<-adonis2(bray_dist ~ HIV_Status + Sampling.point + Nutritional.status + Sex + Age.cat +
BMI_CAT  + Education +District_code + Leanage3 + Drink_alcohol + CFU_LJ + Smoking + culture.Conversion ,
data = sampledf, permutations = 9999)
bray_dist <- phyloseq::distance(EXPname_hell, method = "bray")
Unifra_dist<- phyloseq::distance(EXPname_hell, method = "unifrac")
WUnifra_dist<- phyloseq::distance(EXPname_hell, method = "wunifrac")
EXPname_hell <- EXPname
### create Phyloseq experiment object
EXPname<-phyloseq(data,taxa,meta,OTU_tree)
head(META_LUNG_TABLE)
